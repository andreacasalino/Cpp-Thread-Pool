#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/home/andrea/Scrivania/Thread-Pool/Lib/header/EquiPool.h
ThreadPool.h
/home/andrea/Scrivania/Thread-Pool/Lib/header/ThreadPool.h

/home/andrea/Scrivania/Thread-Pool/Lib/header/PrioritizedPool.h
ThreadPool.h
/home/andrea/Scrivania/Thread-Pool/Lib/header/ThreadPool.h

/home/andrea/Scrivania/Thread-Pool/Lib/header/ThreadPool.h
functional
-
list
-
thread
-
atomic
-
condition_variable
-
memory
-

/home/andrea/Scrivania/Thread-Pool/Lib/src/EquiPool.cpp
../header/EquiPool.h
/home/andrea/Scrivania/Thread-Pool/Lib/header/EquiPool.h
QueueStrategy.h
/home/andrea/Scrivania/Thread-Pool/Lib/src/QueueStrategy.h

/home/andrea/Scrivania/Thread-Pool/Lib/src/PrioritizedPool.cpp
../header/PrioritizedPool.h
/home/andrea/Scrivania/Thread-Pool/Lib/header/PrioritizedPool.h
QueueStrategy.h
/home/andrea/Scrivania/Thread-Pool/Lib/src/QueueStrategy.h
queue
-
utility
-

/home/andrea/Scrivania/Thread-Pool/Lib/src/QueueStrategy.h
../header/ThreadPool.h
/home/andrea/Scrivania/Thread-Pool/Lib/header/ThreadPool.h

/home/andrea/Scrivania/Thread-Pool/Lib/src/ThreadPool.cpp
QueueStrategy.h
/home/andrea/Scrivania/Thread-Pool/Lib/src/QueueStrategy.h
algorithm
-

